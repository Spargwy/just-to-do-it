{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "signup data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "signup data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/task": {
            "post": {
                "description": "create task",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "create task body",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/task/{id}": {
            "get": {
                "description": "task by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "list of user tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "task title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task created_at",
                        "name": "created_at",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task parent_task_id",
                        "name": "parent_task_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task creater_id",
                        "name": "creater_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task responsible_user_id",
                        "name": "responsible_user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task description",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task task_group_id",
                        "name": "task_group_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task estimate_time",
                        "name": "estimate_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task time_spent",
                        "name": "time_spent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "task deleted_at",
                        "name": "deleted_at",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "task archived",
                        "name": "archived",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateTaskRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "estimate_time": {
                    "type": "integer"
                },
                "parent_task_id": {
                    "type": "string"
                },
                "priority": {
                    "$ref": "#/definitions/models.TaskPriority"
                },
                "responsible_user_id": {
                    "type": "string"
                },
                "task_group_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.TaskPriority": {
            "type": "string",
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH",
                "EXTRA"
            ],
            "x-enum-varnames": [
                "LowTaskPriority",
                "MediumTaskPriority",
                "HighTaskPriority",
                "ExtraTaskPriority"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "basic"
        }
    }
}